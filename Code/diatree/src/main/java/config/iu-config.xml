
    <property name="isIncremental" value="true"/>
    
    <property name="deltifier" value="none"/>
    <property name="deltifierParam" value="0"/>
    <property name="baseData" value="baseData"/>
    <property name="dialogueManager" value="echoDialogueManager"/>

    <!-- ******************************************************** -->
    <!-- The incremental processing configuration                 -->
    <!-- ******************************************************** -->
    <!--component name="currentASRHypothesis" type="test.inpro.sphinx.RevokingSphinxASRSource"-->
    <component name="currentASRHypothesis" type="inpro.incremental.source.SphinxASR">
        <property name="frontend" value="${frontend}"/>
        <property name="asrFilter" value="${deltifier}"/>
        <property name="baseData" value="${baseData}"/>
        <!--property name="brutalPruner" value="trivialPruner"/-->
        <propertylist name="hypChangeListeners">
          <item>inlu</item>
<!--         	<item>printer</item> -->
        </propertylist>
    </component>
    
    <component name="googleASR" type="inpro.incremental.source.GoogleASR">
        <property name="apiKey" value="AIzaSyBOnqyblkzEprtUkDrjctec5wJSiJI1i0k"/>
    	<property name="samplingRate" value="16000"/>
    	<property name="lang" value="${language}"/>
        <property name="frontend" value="${frontend}"/>
        <propertylist name="hypChangeListeners">
<!--         	<item>printer</item> -->
			<item>tree</item>
        	<item>inlu</item>
		</propertylist>
    </component>
    
     <component name="task" type="module.TaskModule">
    	<property name="inlu" value="inlu"/>
    	<propertylist name="hypChangeListeners">
<!--     	 	<item>dm</item> -->
		</propertylist>
    </component>
    
     <component name="inlu" type="module.INLUModule">
    	<property name="domain" value="sigdial"/>
    	<property name="module" value="tree"/>
    	<propertylist name="hypChangeListeners">
    	    <item>task</item>
    	 	<item>dm</item>
		</propertylist>
    </component> 
    
     <component name="tree" type="module.TreeModule">
    	<property name="socket" value="diatree"/>
    	<property name="isIncremental" value="{isIncremental}"/>
    	<propertylist name="hypChangeListeners">
		</propertylist>
    </component>   
    
    <component name="asrMessage" type="model.functions.MessageFunction">
        <property name="asr" value="googleASR"/>
        <property name="keyword" value="ferkel"/>
        <propertylist name="hypChangeListeners">
	</propertylist>
    </component>
    
    <component name="registry" type="model.CustomFunctionRegistry">
    <propertylist name="customFunctionNames">
       <item>message</item>
    </propertylist> 
    <propertylist name="customFunctionComponents">
       <item>asrMessage</item>
    </propertylist>       
   </component>  

    <component name="dm" type="module.DialogueManager">
       <property name="domainFile" value="domains/sigdial/opendial/sigdial.xml"/>
       <property name="showGUI" value="false"/>
    <propertylist name="openDialModules">
       <item>decision</item>
    </propertylist>       
    <propertylist name="hypChangeListeners">
    </propertylist>
   </component>  
   
    <component name="decision" type="module.opendial.ConfigurableModule">
        <property name="effectVariable" value="decision"/>
	    <propertylist name="hypChangeListeners">
 	   	 	<item>tree</item> 
	    </propertylist>
    </component>     
    
 
    <component name="diatree" type="jetty.DiaTreeSocket">
     <property name="module" value="tree"/>
    </component>
    
    <component name="vad" type="inpro.incremental.source.VoiceActivityDetector">
        <propertylist name="hypChangeListeners">
<!--          	<item>noninc</item> -->
		</propertylist>
	</component>
	
	 <component name="printer" type="inpro.incremental.processor.IUPrinter">
        <propertylist name="hypChangeListeners">
		</propertylist>
	</component>
    

    <component name="kaldiASR" type="inpro.incremental.source.KaldiASR">
        <property name="server" value="localhost"/>
        <property name="port" value="5010"/>
        <propertylist name="hypChangeListeners">
	</propertylist>
    </component>    
    
    <component name="topdownrevoketestmodule" type="work.inpro.sphinx.topdownrevoke.TopDownRevokeTestModule" />
    
    <component name="iSS" type="inpro.incremental.processor.SynthesisModule">
    	<property name="dispatcher" value="dispatchStream" />
    </component>

    <component name="iuBasedFloorTracker" type="inpro.incremental.processor.IUBasedFloorTracker">
        <property name="useProsody" value="true" />
        <property name="risingProsodyTimeout" value="150" />
        <property name="anyProsodyTimeout" value="600" />
        <propertylist name="ftlisteners">
            <item>${dialogueManager}</item>
        </propertylist>
    </component>
    <component name="textBasedFloorTracker" type="inpro.incremental.processor.TextBasedFloorTracker">
        <propertylist name="listeners">
            <item>${dialogueManager}</item>
        </propertylist>
    </component>

    <component name="echoDialogueManager" type="demo.inpro.system.echodm.dm.EchoDialogueManager">
        <property name="actionManager" value="audioActionManager"/>
        <property name="floorTracker" value="iuBasedFloorTracker"/>
        <property name="dispatchStream" value="dispatchStream" />
        <propertylist name="hypChangeListeners">
            <item>audioActionManager</item>
        </propertylist>
    </component>
    
    <component name="baseData" type="inpro.incremental.basedata.BaseData">
    	<property name="eotFeatureAggregator" value="eotFeatureAggregator" />
    </component>
    
    <component name="eotFeatureAggregator" type="inpro.features.EOTFeatureAggregator">
    	<property name="pitchWindows" value="5 10 20 50"/>
    	<property name="energyWindows" value="5 10 20 50"/>
    	<property name="vEnergyWindows" value="5 10 20 50"/>
    	<property name="timeIntoAudio" value="false"/>
    	<property name="includeFrameCount" value="false"/>
    </component>

    <component name="none" type="inpro.incremental.deltifier.ASRWordDeltifier"/>
    <component name="nonIncr" type="inpro.incremental.deltifier.NonIncrementalDeltifier"/>
    <component name="fixedLag" type="inpro.incremental.deltifier.FixedLagDeltifier">
        <property name="fixedLag" value="${deltifierParam}"/>
    </component>
    <component name="smoothing" type="inpro.incremental.deltifier.SmoothingDeltifier">
        <property name="smoothing" value="${deltifierParam}"/>
    </component>

    <component name="outputForSimpleText" type="inpro.incremental.sink.OutputForSimpleText"/>
    <component name="consoleNotifier" type="inpro.incremental.sink.ConsoleNotifier"/>
    <component name="tedNotifier" type="inpro.incremental.sink.TEDviewNotifier"/>
    <component name="labelWriter2" type="inpro.incremental.sink.LabelWriter"/>
    <component name="hypViewer" type="inpro.incremental.sink.CurrentHypothesisViewer"/>
<!--    <component name="iuNetworkViewer" type="inpro.incremental.sink.IUNetworkViewer"/> -->

    <component name="dotNotifier" type="inpro.incremental.sink.IUNetworkToDOT">
        <property name="runDot" value="true" />
        <property name="outputFormat" value="png" />
    </component>

    <component name="dispatchStream" type="inpro.audio.DispatchStream">
        <property name="sendSilence" value="true"/>
    </component>

    <component name="dispatchStream2" type="inpro.audio.DispatchStream">
        <property name="sendSilence" value="true"/>
    </component>
    