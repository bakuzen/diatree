// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MFRotation.proto

package protobuf;

public final class MFRotationProtos {
  private MFRotationProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MFRotationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated float q1 = 1 [packed = true];
    java.util.List<java.lang.Float> getQ1List();
    int getQ1Count();
    float getQ1(int index);
    
    // repeated float q2 = 2 [packed = true];
    java.util.List<java.lang.Float> getQ2List();
    int getQ2Count();
    float getQ2(int index);
    
    // repeated float q3 = 3 [packed = true];
    java.util.List<java.lang.Float> getQ3List();
    int getQ3Count();
    float getQ3(int index);
    
    // repeated float q4 = 4 [packed = true];
    java.util.List<java.lang.Float> getQ4List();
    int getQ4Count();
    float getQ4(int index);
  }
  public static final class MFRotation extends
      com.google.protobuf.GeneratedMessage
      implements MFRotationOrBuilder {
    // Use MFRotation.newBuilder() to construct.
    private MFRotation(Builder builder) {
      super(builder);
    }
    private MFRotation(boolean noInit) {}
    
    private static final MFRotation defaultInstance;
    public static MFRotation getDefaultInstance() {
      return defaultInstance;
    }
    
    public MFRotation getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.MFRotationProtos.internal_static_protobuf_MFRotation_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.MFRotationProtos.internal_static_protobuf_MFRotation_fieldAccessorTable;
    }
    
    // repeated float q1 = 1 [packed = true];
    public static final int Q1_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Float> q1_;
    public java.util.List<java.lang.Float>
        getQ1List() {
      return q1_;
    }
    public int getQ1Count() {
      return q1_.size();
    }
    public float getQ1(int index) {
      return q1_.get(index);
    }
    private int q1MemoizedSerializedSize = -1;
    
    // repeated float q2 = 2 [packed = true];
    public static final int Q2_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Float> q2_;
    public java.util.List<java.lang.Float>
        getQ2List() {
      return q2_;
    }
    public int getQ2Count() {
      return q2_.size();
    }
    public float getQ2(int index) {
      return q2_.get(index);
    }
    private int q2MemoizedSerializedSize = -1;
    
    // repeated float q3 = 3 [packed = true];
    public static final int Q3_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Float> q3_;
    public java.util.List<java.lang.Float>
        getQ3List() {
      return q3_;
    }
    public int getQ3Count() {
      return q3_.size();
    }
    public float getQ3(int index) {
      return q3_.get(index);
    }
    private int q3MemoizedSerializedSize = -1;
    
    // repeated float q4 = 4 [packed = true];
    public static final int Q4_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Float> q4_;
    public java.util.List<java.lang.Float>
        getQ4List() {
      return q4_;
    }
    public int getQ4Count() {
      return q4_.size();
    }
    public float getQ4(int index) {
      return q4_.get(index);
    }
    private int q4MemoizedSerializedSize = -1;
    
    private void initFields() {
      q1_ = java.util.Collections.emptyList();;
      q2_ = java.util.Collections.emptyList();;
      q3_ = java.util.Collections.emptyList();;
      q4_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getQ1List().size() > 0) {
        output.writeRawVarint32(10);
        output.writeRawVarint32(q1MemoizedSerializedSize);
      }
      for (int i = 0; i < q1_.size(); i++) {
        output.writeFloatNoTag(q1_.get(i));
      }
      if (getQ2List().size() > 0) {
        output.writeRawVarint32(18);
        output.writeRawVarint32(q2MemoizedSerializedSize);
      }
      for (int i = 0; i < q2_.size(); i++) {
        output.writeFloatNoTag(q2_.get(i));
      }
      if (getQ3List().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(q3MemoizedSerializedSize);
      }
      for (int i = 0; i < q3_.size(); i++) {
        output.writeFloatNoTag(q3_.get(i));
      }
      if (getQ4List().size() > 0) {
        output.writeRawVarint32(34);
        output.writeRawVarint32(q4MemoizedSerializedSize);
      }
      for (int i = 0; i < q4_.size(); i++) {
        output.writeFloatNoTag(q4_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        dataSize = 4 * getQ1List().size();
        size += dataSize;
        if (!getQ1List().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        q1MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getQ2List().size();
        size += dataSize;
        if (!getQ2List().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        q2MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getQ3List().size();
        size += dataSize;
        if (!getQ3List().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        q3MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getQ4List().size();
        size += dataSize;
        if (!getQ4List().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        q4MemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static protobuf.MFRotationProtos.MFRotation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static protobuf.MFRotationProtos.MFRotation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static protobuf.MFRotationProtos.MFRotation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static protobuf.MFRotationProtos.MFRotation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static protobuf.MFRotationProtos.MFRotation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static protobuf.MFRotationProtos.MFRotation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static protobuf.MFRotationProtos.MFRotation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static protobuf.MFRotationProtos.MFRotation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static protobuf.MFRotationProtos.MFRotation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static protobuf.MFRotationProtos.MFRotation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.MFRotationProtos.MFRotation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements protobuf.MFRotationProtos.MFRotationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.MFRotationProtos.internal_static_protobuf_MFRotation_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.MFRotationProtos.internal_static_protobuf_MFRotation_fieldAccessorTable;
      }
      
      // Construct using protobuf.MFRotationProtos.MFRotation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        q1_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        q2_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        q3_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        q4_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.MFRotationProtos.MFRotation.getDescriptor();
      }
      
      public protobuf.MFRotationProtos.MFRotation getDefaultInstanceForType() {
        return protobuf.MFRotationProtos.MFRotation.getDefaultInstance();
      }
      
      public protobuf.MFRotationProtos.MFRotation build() {
        protobuf.MFRotationProtos.MFRotation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private protobuf.MFRotationProtos.MFRotation buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        protobuf.MFRotationProtos.MFRotation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public protobuf.MFRotationProtos.MFRotation buildPartial() {
        protobuf.MFRotationProtos.MFRotation result = new protobuf.MFRotationProtos.MFRotation(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          q1_ = java.util.Collections.unmodifiableList(q1_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.q1_ = q1_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          q2_ = java.util.Collections.unmodifiableList(q2_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.q2_ = q2_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          q3_ = java.util.Collections.unmodifiableList(q3_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.q3_ = q3_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          q4_ = java.util.Collections.unmodifiableList(q4_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.q4_ = q4_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.MFRotationProtos.MFRotation) {
          return mergeFrom((protobuf.MFRotationProtos.MFRotation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(protobuf.MFRotationProtos.MFRotation other) {
        if (other == protobuf.MFRotationProtos.MFRotation.getDefaultInstance()) return this;
        if (!other.q1_.isEmpty()) {
          if (q1_.isEmpty()) {
            q1_ = other.q1_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureQ1IsMutable();
            q1_.addAll(other.q1_);
          }
          onChanged();
        }
        if (!other.q2_.isEmpty()) {
          if (q2_.isEmpty()) {
            q2_ = other.q2_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureQ2IsMutable();
            q2_.addAll(other.q2_);
          }
          onChanged();
        }
        if (!other.q3_.isEmpty()) {
          if (q3_.isEmpty()) {
            q3_ = other.q3_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureQ3IsMutable();
            q3_.addAll(other.q3_);
          }
          onChanged();
        }
        if (!other.q4_.isEmpty()) {
          if (q4_.isEmpty()) {
            q4_ = other.q4_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureQ4IsMutable();
            q4_.addAll(other.q4_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 13: {
              ensureQ1IsMutable();
              q1_.add(input.readFloat());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addQ1(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 21: {
              ensureQ2IsMutable();
              q2_.add(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addQ2(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 29: {
              ensureQ3IsMutable();
              q3_.add(input.readFloat());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addQ3(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 37: {
              ensureQ4IsMutable();
              q4_.add(input.readFloat());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addQ4(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated float q1 = 1 [packed = true];
      private java.util.List<java.lang.Float> q1_ = java.util.Collections.emptyList();;
      private void ensureQ1IsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          q1_ = new java.util.ArrayList<java.lang.Float>(q1_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<java.lang.Float>
          getQ1List() {
        return java.util.Collections.unmodifiableList(q1_);
      }
      public int getQ1Count() {
        return q1_.size();
      }
      public float getQ1(int index) {
        return q1_.get(index);
      }
      public Builder setQ1(
          int index, float value) {
        ensureQ1IsMutable();
        q1_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addQ1(float value) {
        ensureQ1IsMutable();
        q1_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllQ1(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureQ1IsMutable();
        super.addAll(values, q1_);
        onChanged();
        return this;
      }
      public Builder clearQ1() {
        q1_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      
      // repeated float q2 = 2 [packed = true];
      private java.util.List<java.lang.Float> q2_ = java.util.Collections.emptyList();;
      private void ensureQ2IsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          q2_ = new java.util.ArrayList<java.lang.Float>(q2_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<java.lang.Float>
          getQ2List() {
        return java.util.Collections.unmodifiableList(q2_);
      }
      public int getQ2Count() {
        return q2_.size();
      }
      public float getQ2(int index) {
        return q2_.get(index);
      }
      public Builder setQ2(
          int index, float value) {
        ensureQ2IsMutable();
        q2_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addQ2(float value) {
        ensureQ2IsMutable();
        q2_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllQ2(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureQ2IsMutable();
        super.addAll(values, q2_);
        onChanged();
        return this;
      }
      public Builder clearQ2() {
        q2_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      
      // repeated float q3 = 3 [packed = true];
      private java.util.List<java.lang.Float> q3_ = java.util.Collections.emptyList();;
      private void ensureQ3IsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          q3_ = new java.util.ArrayList<java.lang.Float>(q3_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Float>
          getQ3List() {
        return java.util.Collections.unmodifiableList(q3_);
      }
      public int getQ3Count() {
        return q3_.size();
      }
      public float getQ3(int index) {
        return q3_.get(index);
      }
      public Builder setQ3(
          int index, float value) {
        ensureQ3IsMutable();
        q3_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addQ3(float value) {
        ensureQ3IsMutable();
        q3_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllQ3(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureQ3IsMutable();
        super.addAll(values, q3_);
        onChanged();
        return this;
      }
      public Builder clearQ3() {
        q3_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // repeated float q4 = 4 [packed = true];
      private java.util.List<java.lang.Float> q4_ = java.util.Collections.emptyList();;
      private void ensureQ4IsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          q4_ = new java.util.ArrayList<java.lang.Float>(q4_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<java.lang.Float>
          getQ4List() {
        return java.util.Collections.unmodifiableList(q4_);
      }
      public int getQ4Count() {
        return q4_.size();
      }
      public float getQ4(int index) {
        return q4_.get(index);
      }
      public Builder setQ4(
          int index, float value) {
        ensureQ4IsMutable();
        q4_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addQ4(float value) {
        ensureQ4IsMutable();
        q4_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllQ4(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureQ4IsMutable();
        super.addAll(values, q4_);
        onChanged();
        return this;
      }
      public Builder clearQ4() {
        q4_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:protobuf.MFRotation)
    }
    
    static {
      defaultInstance = new MFRotation(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:protobuf.MFRotation)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_MFRotation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_MFRotation_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020MFRotation.proto\022\010protobuf\"L\n\nMFRotati" +
      "on\022\016\n\002q1\030\001 \003(\002B\002\020\001\022\016\n\002q2\030\002 \003(\002B\002\020\001\022\016\n\002q3" +
      "\030\003 \003(\002B\002\020\001\022\016\n\002q4\030\004 \003(\002B\002\020\001B\034\n\010protobufB\020" +
      "MFRotationProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_protobuf_MFRotation_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_protobuf_MFRotation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protobuf_MFRotation_descriptor,
              new java.lang.String[] { "Q1", "Q2", "Q3", "Q4", },
              protobuf.MFRotationProtos.MFRotation.class,
              protobuf.MFRotationProtos.MFRotation.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
