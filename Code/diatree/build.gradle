/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'casey' at '10/26/15 10:14 AM' with Gradle 2.6
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.6/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'

apply from: 'https://raw.githubusercontent.com/plison/opendial/master/build.gradle'
apply from: 'https://bitbucket.org/dsgbielefeld/inprotk/raw/gradle/build.gradle'

configurations {
    compile.exclude module: 'inlg'
    compile.exclude module: 'jspud'
    compile.exclude group: 'org.yaml'
    compile.exclude module: 'sphinx4-core'
}
eclipse {
	classpath {
	        file {
	            //closure executed after .classpath content is loaded from existing file
	            //and after gradle build information is merged
	            whenMerged { classpath ->
	                classpath.entries.removeAll { entry -> entry.kind == 'src' && entry.dir == file("$projectDir/src")}                
	       }
	    }
	}
}

ext.projectName = 'diatree'
ext.projectDescription = 'Dialogue Tree'
ext.projectUrl = 'https://bitbucket.org/dsgbielefeld/027_dialogue_management'
ext.developerID = 'casey'
ext.developerName = 'Casey Kennington'
ext.developerEmail = 'bakuzen@gmail.com'
version = '0.1'

// In this section you declare where to find the dependencies of your project
repositories {
jcenter()
    mavenCentral()
     maven {
        // for the DSG deployed jars
        url  "http://dl.bintray.com/bakuzen/maven" 
    }
   ivy { 
    	url  "https://bitbucket.org/dsgbielefeld/dsg-repo/raw/master/lib" 
        layout "pattern", {
            artifact "[artifact].[ext]"
        }	
     }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'de.dsg:sium:0.7'
    compile 'de.dsg:wac:0.2'
    //compile 'de.dsg:inprotk:1.2'
    compile 'de.dsg:sium-inpro:1.2'
    compile 'de.dsg:opendial:1.43'
    compile 'org.slf4j:slf4j-api:1.7.12'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    compile  'log4j:log4j:1.2.16'
    testCompile group: 'junit', name: 'junit-dep', version: '4.11'
    compile group: 'junit', name: 'junit-dep', version: '4.11'
}


//--------------------------------
// added to the end for deploying
//--------------------------------
buildscript{
	apply from: "https://bitbucket.org/dsgbielefeld/dsg-repo/raw/master/buildscript.gradle", to: buildscript
}

// common DSG elements, should be last line
apply from: "https://bitbucket.org/dsgbielefeld/dsg-repo/raw/master/dsg.gradle"